/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    macros {
        APDL_rep: APDL {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp FSLH &kp R &kp E &kp P &kp RET>;
            label = "APDL";
        };

        APDL_CM: APDL_CM {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp C &kp M &kp S &kp E &kp L &kp COMMA &kp COMMA>;
            label = "APDL_CM";
        };

        APDL_fit: APDL_fit {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp FSLH &kp V &kp I &kp E &kp W &kp COMMA &kp N1 &kp COMMA &kp N1 &kp COMMA &kp N2 &kp COMMA &kp N3 &kp DLLR &kp FSLH &kp A &kp U &kp T &kp O &kp COMMA &kp N1 &kp DLLR &kp FSLH &kp R &kp E &kp P &kp RET>;
            label = "APDL_FIT";
        };

        APDL_do: APDL_do {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp STAR &kp D &kp O &kp COMMA &kp I &kp COMMA &kp N2 &kp COMMA &kp N9 &kp N9 &kp RET &kp SPACE &kp SPACE &kp C &kp M &kp S &kp E &kp L &kp COMMA &kp COMMA &kp RET &kp BACKSPACE &kp ASTERISK &kp E &kp N &kp D &kp D &kp O>;
            label = "APDL_DO";
        };

        APDL_array: APDL_array {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp STAR &kp D &kp E &kp L &kp COMMA &kp T &kp S &kp T &kp COMMA &kp COMMA &kp N &kp O &kp P &kp R &kp RET &kp STAR &kp D &kp I &kp M &kp COMMA &kp T &kp S &kp T &kp COMMA &kp A &kp R &kp R &kp A &kp Y &kp COMMA &kp N9 &kp N9 &kp COMMA &kp N1 &kp RET &kp RET &kp SPACE &kp SPACE &kp T &kp S &kp T &kp LPAR &kp N1 &kp COMMA &kp N1 &kp RPAR &kp SPACE &kp EQUAL &kp SPACE &kp N1>;
            label = "APDL_ARRAY";
        };

        APDL_str: APDL_str {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp STAR &kp D &kp E &kp L &kp COMMA &kp S &kp T &kp R &kp UNDER &kp COMMA &kp COMMA &kp N &kp O &kp P &kp R &kp RET &kp STAR &kp D &kp I &kp M &kp COMMA &kp S &kp T &kp R &kp UNDER &kp COMMA &kp S &kp T &kp R &kp I &kp N &kp G &kp COMMA &kp N7 &kp N2 &kp COMMA &kp N9 &kp N9 &kp RET &kp RET &kp SPACE &kp SPACE &kp S &kp T &kp R &kp UNDER &kp LPAR &kp N1 &kp COMMA &kp N2 &kp RPAR &kp SPACE &kp EQUAL &kp SPACE &kp SQT &kp LS(L) &kp LS(C) &kp SPACE &kp N2 &kp COLON &kp SPACE &kp LS(T) &kp I &kp T &kp L &kp E &kp SQT>;
            label = "APDL_STR";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB           &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y          &kp U  &kp I          &kp O    &kp P     &kp ENTER
&kp LEFT_SHIFT    &kp A  &kp S  &kp D     &kp F  &kp G        &kp H          &kp J  &kp K          &kp L    &kp SEMI  &kp SQT
&kp LEFT_CONTROL  &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N          &kp M  &kp COMMA      &kp DOT  &kp FSLH  &kp RIGHT_SHIFT
                                &kp LGUI  &mo 1  &kp SPACE    &kp BACKSPACE  &mo 2  &kp RIGHT_ALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB           &kp F2  &rgb_ug RGB_OFF  &kp UP_ARROW    &kp LEFT_PARENTHESIS  &kp COMMA                &kp STAR   &kp N7  &kp N8    &kp N9  &kp MINUS  &kp DELETE
&kp LEFT_SHIFT    &kp F7  &kp LEFT         &kp DOWN_ARROW  &kp RIGHT_ARROW       &kp RIGHT_PARENTHESIS    &kp FSLH   &kp N4  &kp N5    &kp N6  &kp PLUS   &kp HOME
&kp LEFT_CONTROL  &trans  &bt BT_SEL 0     &bt BT_SEL 1    &bt BT_SEL 2          &kp EQUAL                &kp N0     &kp N1  &kp N2    &kp N3  &kp DOT    &kp END
                                           &kp LGUI        &trans                &kp SPACE                &kp ENTER  &mo 3   &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESCAPE    &kp EXCL      &kp AT           &kp HASH          &kp DLLR              &kp PRCNT                &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&kp CAPSLOCK  &trans        &kp ASTRK        &kp SLASH         &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS    &kp EQUAL  &kp UNDER  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT     &kp C_VOL_DN  &kp C_VOLUME_UP  &kp C_PLAY_PAUSE  &kp C_PREVIOUS        &kp C_NEXT               &kp PLUS   &kp MINUS  &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                                             &kp LGUI          &trans                &kp SPACE                &kp ENTER  &trans     &kp RALT
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans       &trans     &trans    &trans    &trans    &trans  &trans  &trans  &trans     &trans     &trans
&trans  &APDL_array  &APDL_str  &APDL_do  &APDL_CM  &trans    &trans  &trans  &trans  &APDL_fit  &APDL_rep  &trans
&trans  &trans       &trans     &trans    &trans    &trans    &trans  &trans  &trans  &trans     &trans     &trans
                                &trans    &trans    &trans    &trans  &trans  &trans
            >;
        };
    };
};
